AIDE - Advanced Intrusion Detection Environment no Ubuntu 20.04

AIDE é um sistema de detecção de intrusão que detecta alterações em arquivos no sistema local. Ele cria um banco de dados a partir das regras de expressão regular que encontra no arquivo de configuração. Depois que esse banco de dados é inicializado, ele pode ser usado para verificar a integridade dos arquivos. Ele possui vários algoritmos de resumo de mensagens (md5, sha1, rmd160, tiger, haval, etc.) que são usados para verificar a integridade do arquivo. Mais algoritmos podem ser adicionados com relativa facilidade. Todos os atributos de arquivo usuais também podem ser verificados quanto a inconsistências. Algumas das propriedades de arquivo que AIDE pode verificar incluem permissões de arquivo, inodes, hora de modificação, conteúdo do arquivo, usuário, grupo, tamanho do arquivo ...

Instalação e configuração do AIDE no Ubuntu 20.04

sudo apt update

sudo apt-cache policy aide

sudo apt install -y aide

aide --help

aide -v

aide --init

ou
sudo aideinit

Criar novo banco de dados do AIDE

sudo cp /var/lib/aide/aide.db{.new,}

Reconstruir a configuração do AIDE

/etc/aide/aide.conf

Executar

update-aide.conf

Gera
/var/lib/aide/aide.conf.autogenerated.

sudo cp /var/lib/aide/aide.conf.autogenerated /etc/aide/aide.conf

Checar o banco por inconsistências

aide -c /etc/aide/aide.conf -C

Testando AIDE

Criar alguns arquivos, editar e excluir outros para testar

sudo echo "1.2.3.4 test.kifarunix-demo.com" >> /etc/hosts
sudo touch /etc/newfile
sudo rm -rf /etc/issue

Depois de todas essas mudanças, execute novamente a verificação do banco de dados AIDE no sistema de arquivos.

aide -c /etc/aide/aide.conf -C

Limitando as verificações de integridade do AIDES a arquivos e diretórios específicos

Para limitar as verificações de integridade a entradas específicas, por exemplo /etc, passe a opção --limit REGEX para o comando AIDE check, onde REGEX é a entrada a ser verificada.

Por exemplo, verifique e atualize as entradas do banco de dados correspondentes a /etc, você executaria o comando aide conforme mostrado abaixo;

sudo aide -c /etc/aide/aide.conf --limit /etc --check

Para excluir alguns diretórios, edite o arquivo de configuração, /etc/aide/aide.conf, e adicione os diretórios a serem ignorados no final do arquivo no formato;

!/home/
!/var/lib/
!/proc

Usando configuração AIDE personalizada

Você também pode criar sua própria configuração e definir o que precisa ser verificado e o que não é. Veja a configuração de exemplo abaixo;

mkdir /home/ribafs/aide

nano /home/ribafs/aide/aide.conf

# Path for creating the databases
database=file:/home/ribafs/aide/aide.db
database_out=file:/home/ribafs/aide/aide.db.new
database_new=file:/home/ribafs/aide/aide.db.new

# Set your own AIDE rule.
MYRULE=p+n+u+g+s+m+c+xattrs+md5+sha512

# Directories/files to be monitored and rule to apply
#/etc MYRULE
#/bin MYRULE
#/usr/bin MYRULE

# Directories to ignore
/home MYRULE
!/proc

Basicamente, o conjunto de regras acima verifica permissões, número de links, usuário, grupo, hora de modificação, tempo de mudança de inode/arquivo, atributos de arquivo estendidos, soma de verificação MD5, soma de verificação SHA512.

Inicialize o banco de dados com a nova configuração;

sudo aide -c /home/ribafs/aide/aide.conf -i

Copie o banco de dados no local;

cp /home/ribafs/aide/aide.db{.new,}

Verifique se há erros no arquivo de configuração executando o comando abaixo;

aide -c /home/ribafs/aide/aide.conf --config-check

Verifique o status de saída do comando.

echo $?

Diagnóstico AIDE

De acordo com as páginas de manual do AIDE, o status de saída do AIDE é normalmente 0 se nenhum erro ocorreu. Exceto quando o comando --check, --compare ou --update foi solicitado, caso em que o status de saída é definido como:

   1 * (new files detected?)     +

   2 * (removed files detected?) +

   4 * (changed files detected?)
   
Uma vez que esses três casos podem ocorrer juntos, os respectivos códigos de erro são adicionados. Por exemplo, se houver novos arquivos e arquivos removidos detectados, o status de saída será 1 + 2 = 3.

    Além disso, os seguintes códigos de saída são definidos para condições de erro genéricas:
    
   14 Error writing error

   15 Invalid argument error

   16 Unimplemented function error

   17 Invalid configureline error

   18 IO error

   19 Version mismatch error
   
NOTA: Sempre que você fizer qualquer alteração na configuração do AIDE, lembre-se de inicializar o banco de dados para criar uma linha de base.
Faça alterações como criar um novo diretório, arquivos;

rm -rf /home/ribafs/aide/aide.db.new
mkdir /home/ribafs/test-dir
touch /home/ribafs/test-file

Você pode então executar o AIDE em sua configuração personalizada.

aide -c /home/ribafs/aide/aide.conf -C

          
aide --check

Criar arquivo de teste

touch /usr/sbin/mytestfile.txt

aide --check

aide --update

ls -lt

mv aide.db.gz aide.db.gz-Marc152018`

mv aide.db.new.gz aide.db.gz

Automatizar

crontab -e

06 01 * * 0-6 /var/log/aide/chkaide.sh

cat /var/log/aide/chaide.sh

Configurações
/etc/aide.conf


Referências

https://kifarunix.com/install-ossec-hids-agent-on-ubuntu-20-04/

https://kifarunix.com/install-and-configure-aide-on-ubuntu-20-04/

https://www.digitalocean.com/community/tutorials/how-to-install-aide-on-a-digitalocean-vps

https://blog.rapid7.com/2017/06/30/how-to-install-and-configure-aide-on-ubuntu-linux/

